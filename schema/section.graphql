type Section {
  id: ObjID!
  num: Int!
  name: String!
  remark: String
  count(examinationDifficultyId: ObjID): Int!
  chapter: Chapter!
  exercises(skip: Int, limit: Int, examinationDifficultyId: ObjID, type: String): [Exercise!]
  rateOfProgressOfSection(userId: ObjID!, examinationDifficultyId: ObjID!): RateOfProgressOfSection
  createdAt: Float!
  updatedAt: Float!
}

extend type Query {
  sections(skip:Int, limit: Int, examinationDifficultyId: ObjID): [Section!]
  section(id: ObjID!): Section
}

input createSectioninput {
  num: Int!
  name: String!
  remark: String
  chapterId: ObjID!
}

input UpdateSectionInput {
  num: Int!
  name: String
  remark: String
  chapterId: ObjID
}

extend type Mutation {
  createSection(input:createSectioninput!): Section
  updateSection(id: ObjID!, input: UpdateSectionInput!): Section
  removeSection(id: ObjID!): Boolean
  removeSectionExercise(id: ObjID!): Boolean
}

type UserAnswer {
  id: ObjID!
  isAnswer: Boolean!
  user: User!
  answer: Answer!
  createdAt: Float!
  updatedAt: Float!
}

extend type Query {
  userAnswers(skip:Int, limit: Int): [UserAnswer!]
  userAnswer(id: ObjID!): UserAnswer
}

input createUserAnswerinput {
  isAnswer: Boolean!
  userId: ObjID!
  answerId: ObjID!
  examinationHasExerciseId: ObjID
}

input UpdateUserAnswerInput {
  isAnswer: Boolean!
  userId: ObjID
  answerId: ObjID
  examinationHasExerciseId: ObjID
}

extend type Mutation {
  createUserAnswer(input:createUserAnswerinput!): UserAnswer
  updateUserAnswer(id: ObjID!, input: UpdateUserAnswerInput!): UserAnswer
  removeUserAnswer(id: ObjID!): Boolean
}

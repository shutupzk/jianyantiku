type Exercise {
	id: ObjID!
	content: String!
	num: Int!
	hot: Boolean # 是否是高频
	difficulty: Int # 难度系数
	section: Section
	subject: Subject
	yearExerciseList: YearExerciseList
	yearHasType: YearHasType
	mockExamination: MockExamination
	examinationDifficulty: ExaminationDifficulty
	yearExamType: YearExamType
	type: String! #01: 02: 真题, 03:精品题库
	answerCount: Int
	rightCount: Int
	rightRate: Float
	normalErrorAnswer: String
	answers(skip: Int, limit: Int): [Answer!]
	exerciseCollects(skip: Int, limit: Int): [ExerciseCollect!]
	exerciseImages(skip: Int, limit: Int): [ExerciseImage!]
	notes(skip: Int, limit: Int,userId:ObjID): [Note!]
	analysiss(skip: Int, limit: Int): [Analysis!]
	createdAt: Float!
	updatedAt: Float!
}

extend type Query {
	exercises(skip: Int, limit: Int , hot: Boolean, type: String, examinationDifficultyId: ObjID, yearExerciseListId: ObjID, subjectId: ObjID, sectionId: ObjID, chapterId: ObjID, yearExamTypeId: ObjID, keyword: String): [Exercise!]
	exercise(id: ObjID!): Exercise
}

input createExerciseinput {
	content: String!
	num: Int!
	hot: Boolean # 是否是高频
	difficulty: Int # 难度系数
	sectionId: ObjID
	subjectId: ObjID
	type: String!
	yearExerciseListId: ObjID
	yearHasTypeId: ObjID
	mockExaminationId: ObjID
	examinationDifficultyId: ObjID
}

input UpdateExerciseInput {
	content: String
	num: Int
	hot: Boolean # 是否是高频
	difficulty: Int # 难度系数
	sectionId: ObjID
	subjectId: ObjID
	type: String
	yearExerciseListId: ObjID
	yearHasTypeId: ObjID
	mockExaminationId: ObjID
	examinationDifficultyId: ObjID
}

extend type Mutation {
	createExercise(input: createExerciseinput!): Exercise
	updateExercise(id: ObjID!, input: UpdateExerciseInput!): Exercise
	removeExercise(id: ObjID!): Boolean
}

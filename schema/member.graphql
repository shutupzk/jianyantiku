type Member {
  id: ObjID!
  code: Int!
  name: String!
  memberCharges: [MemberCharge!]
  memberServices: [MemberService!]
  createdAt: Float!
  updatedAt: Float!
}

extend type Query {
  members(lastCreatedAt: Float, skip: Int, limit: Int): [Member!]
  member(id: ObjID!): Member
}

input createMemberInput {
  code: Int!
  name: String!
}

input updateMemberInput {
  name: String
}

extend type Mutation {
  createMember(input: createMemberInput): Member
  removeMember(id: ObjID!): Boolean
  updateMember(id: ObjID!, input: updateMemberInput): Member
}

type ExaminationModel { #试卷模板
  id: ObjID!
  name: String! #试卷名称
  examinationdifficulty: ExaminationDifficulty! #难度
  exercises(skip:Int, limit: Int): [Exercise]
  createdAt: Float!
  updatedAt: Float!
}

extend type Query {
  examinationModels(skip:Int, limit: Int): [ExaminationModel!]
  examinationModel(id: ObjID!): ExaminationModel
}

input createExaminationModelInput {
  name: String! 
  examinationdifficultyId:ObjID!
  exerciseIds:[ObjID!]
}

input UpdateExaminationModelInput {
  name: String
  examinationdifficultyId:ObjID
  exerciseIds:[ObjID]
}

extend type Mutation {
  createExaminationModel(input:createExaminationModelInput!): ExaminationModel
  updateExaminationModel(id: ObjID!, input: UpdateExaminationModelInput!): ExaminationModel
  removeExaminationModel(id: ObjID!): Boolean
}

type UserExerciseTime {
  id: ObjID!
  user: User!
  times: Int!
  date: String!
  totalCount: Int!
  rightCount: Int!
  errorCount: Int!
  rightRate: String!
  createdAt: Float!
  updatedAt: Float!
}

extend type Query {
  userExerciseTimes(skip:Int, limit: Int): [UserExerciseTime!]
  userExerciseTime(id: ObjID!): UserExerciseTime
}

input createUserExerciseTimeinput {
  userId: ObjID!
}

input UpdateUserExerciseTimeInput {
  userId: ObjID
}

extend type Mutation {
  createUserExerciseTime(input:createUserExerciseTimeinput!): UserExerciseTime
  updateUserExerciseTime(id: ObjID!, input: UpdateUserExerciseTimeInput!): UserExerciseTime
  removeUserExerciseTime(id: ObjID!): Boolean
}
